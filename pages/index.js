import Head from 'next/head'
import useSWR, { SWRConfig } from 'swr'

const fetcher = (...arg) => fetch(...arg).then((res) => res.json())

export default function Home() {
  const { data: posts, mutate } = useSWR('/api/post/list', fetcher)

  const handleCreatePosts = async () => {
    const dataPost = {
      title: 'Hola aaa!',
      content: 'como estas? ðŸ‘¾',
    }

    mutate(
      [
        ...posts,
        {
          ...dataPost,
          id: Math.random().toString(36).slice(2),
          date: '2020-05-05T00:00:00.000Z',
        },
      ],
      false
    )

    fetch('http://localhost:3000/api/post/create', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ data: dataPost }),
    })
      .then((res) => res.json())
      .then(() => mutate())
  }

  return (
    <SWRConfig>
      <div>
        <Head>
          <title>ðŸ‘¾ Practicando con SWR</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        <h1 className='py-4 text-2xl text-center'>ðŸ‘¾ Practicando con SWR ðŸ‘¾</h1>
        <div className='flex justify-center mt-8'>
          <button
            className='border px-4 py-2 rounded-md'
            onClick={handleCreatePosts}
          >
            Crear info desde el boton
          </button>
        </div>
        <section className='mt-20 max-w-screen-lg mx-auto'>
          {posts && posts.length >= 1 ? (
            posts.map((post) => (
              <div key={post.id}>
                <h2>{post.title}</h2>
                <p>{post.content}</p>
                <p>{post.date}</p>
              </div>
            ))
          ) : (
            <p className='text-center'>No hay posts ðŸ’‹</p>
          )}
        </section>
      </div>
    </SWRConfig>
  )
}

export async function getServerSideProps() {
  const listOfPosts = await fetch('http://localhost:3000/api/post/list')
    .then((res) => res.json())
    .then((data) => data)

  return {
    props: {
      posts: listOfPosts,
    },
  }
}
